{"version":3,"sources":["hooks/useCookie.js","components/Views/Signin.js","components/Views/Signup.js","redux/actionCreator.js","redux/actionTypes.js","hooks/useLongPress.js","components/Views/contacts/Contacts.js","hooks/usePersistedState.js","components/Views/chat/Chat.js","components/Views/recorder/Recorder.js","components/Views/user/User.js","redux/reducers/reciepient.js","redux/reducers/message.js","redux/reducers/history.js","redux/reducers/loggedInUser.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","delete_cookie","name","getCookie","ca","split","i","length","c","charAt","substring","indexOf","Signin","useState","username","setUsername","password","setPassword","value","history","useHistory","useSpeechSynthesis","speak","voices","voice","forEach","v","lang","useEffect","user","checkCookie","console","log","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","data","error","text","M","toast","html","localStorage","setItem","token","push","catch","Card","className","classsname","Row","InputGroup","Col","xs","FormControl","style","margin","type","placeholder","onChange","e","target","Button","onClick","to","display","justifyContent","Signup","phone","setPhone","setName","classname","message","updateHistory","new_history","payload","updateLoggedInUser","new_user","loggedinUser","updateMessage","new_message","from","enc","preventDefault","event","isTouchEvent","touches","useLongPress","onLongPress","shouldPreventDefault","delay","longPressTriggered","setLongPressTriggered","timeout","useRef","start","useCallback","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","Contacts","props","historys","dispatch","useDispatch","userLoggedIn","useSelector","state","reciepient","loggedInUser","list","setList","frndlist","setFrndList","online","setOnline","key","defaultValue","React","persistedState","getItem","parse","setState","window","usePersistedState","ptr","setPtr","newContact","setNewContact","verifyContact","setVerifyContact","useSpeechRecognition","onResult","result","replace","onEnd","sayThis","join","listen","listening","stop","longPressEvent","addContact","startListening","stopListening","status","a","res","err","setInterval","anyFunction","flag","friend","logout","reciepientName","Chat","myHeaders","Headers","append","raw","recipient","requestOptions","redirect","readMessage","msg","undefined","toUpperCase","slice","Promise","resolve","Audio","play","render","startRecording","stopRecording","mediaBlobUrl","end","r","blob","reader","FileReader","readAsDataURL","onloadend","base64data","Recorder","sendMessage","User","useParams","server","ws","WebSocket","ws_server","buffer","getHistory","onerror","onmessage","Accept","resp","close","timestamp","now","send","includes","Reciepient","action","n_reciepient","Message","History","LoggedinUser","new_logggedInUser","appHistory","createBrowserHistory","store","createStore","combineReducers","composeWithDevTools","App","exact","path","Component","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3791b97e.chunk.js","sourcesContent":["export function setCookie(cname, cvalue, exdays) {\r\n\tvar d = new Date();\r\n\td.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\r\n\tvar expires = \"expires=\" + d.toUTCString();\r\n\tdocument.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n\r\nexport function delete_cookie(name) {\r\n\tdocument.cookie = name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n}\r\n\r\nexport function getCookie(cname) {\r\n\tvar name = cname + \"=\";\r\n\tvar ca = document.cookie.split(\";\");\r\n\tfor (var i = 0; i < ca.length; i++) {\r\n\t\tvar c = ca[i];\r\n\t\twhile (c.charAt(0) == \" \") {\r\n\t\t\tc = c.substring(1);\r\n\t\t}\r\n\t\tif (c.indexOf(name) == 0) {\r\n\t\t\treturn c.substring(name.length, c.length);\r\n\t\t}\r\n\t}\r\n\treturn \"\";\r\n}\r\n\r\nexport function checkCookie() {\r\n\tvar user = getCookie(\"username\");\r\n\tvar pass = getCookie(\"password\");\r\n\tif (user != \"\") {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t\t// user = prompt(\"Please enter your name:\", \"\");\r\n\t\t// if (user != \"\" && user != null) {\r\n\t\t// \tsetCookie(\"username\", user, 365);\r\n\t\t// }\r\n\t}\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { setCookie, getCookie, checkCookie } from \"../../hooks/useCookie\";\r\nimport M from \"materialize-css\";\r\nimport \"./auth.css\";\r\nimport {\r\n\tCard,\r\n\tRow,\r\n\tCol,\r\n\tInputGroup,\r\n\tFormControl,\r\n\tButton,\r\n} from \"react-bootstrap\";\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\n\r\nconst Signin = () => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [value, setValue] = useState(\"\");\r\n\tconst history = useHistory();\r\n\tconst { speak, voices } = useSpeechSynthesis();\r\n\r\n\tlet voice = null;\r\n\tvoices.forEach((v) => {\r\n\t\tif (v.lang === \"hi-IN\") {\r\n\t\t\tvoice = v;\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (checkCookie()) {\r\n\t\t\tlet voice = null;\r\n\t\t\tvoices.forEach((v) => {\r\n\t\t\t\tif (v.lang === \"hi-IN\") {\r\n\t\t\t\t\tvoice = v;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst username = getCookie(\"username\");\r\n\t\t\tconst password = getCookie(\"password\");\r\n\t\t\tconsole.log(username);\r\n\t\t\tconsole.log(password);\r\n\t\t\tfetch(\"http://stormy-tundra-81519.herokuapp.com/auth/login\", {\r\n\t\t\t\tmethod: \"post\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t\tcredentials: \"include\",\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tusername,\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t}),\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tif (data.error) {\r\n\t\t\t\t\t\tspeak({\r\n\t\t\t\t\t\t\ttext: `Unable to sign in. ${data.error}`,\r\n\t\t\t\t\t\t\tvoice,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tM.toast({ html: data.error });\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tspeak({\r\n\t\t\t\t\t\t\ttext: `Signed in successfully as ${username}!`,\r\n\t\t\t\t\t\t\tvoice,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tM.toast({ html: \"Signed in successfully!\" });\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\tlocalStorage.setItem(\"jwt\", data.token);\r\n\t\t\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(data.user));\r\n\t\t\t\t\t\thistory.push(\"/usr/contacts\");\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => console.log(\"error\", error));\r\n\t\t}\r\n\t}, [value]);\r\n\r\n\tconst postInfo = () => {\r\n\t\tfetch(\"http://stormy-tundra-81519.herokuapp.com/auth/login\", {\r\n\t\t\tmethod: \"post\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tcredentials: \"include\",\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tusername,\r\n\t\t\t\tpassword,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tif (data.error) {\r\n\t\t\t\t\tspeak({\r\n\t\t\t\t\t\ttext: `Unable to sign in. ${data.error}`,\r\n\t\t\t\t\t\tvoice,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tM.toast({ html: data.error });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tspeak({\r\n\t\t\t\t\t\ttext: `Signed in successfully as ${username}!`,\r\n\t\t\t\t\t\tvoice,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tM.toast({ html: \"Signed in successfully!\" });\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tlocalStorage.setItem(\"jwt\", data.token);\r\n\t\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(data.user));\r\n\t\t\t\t\tsetCookie(\"username\", username, 365 * 10);\r\n\t\t\t\t\tsetCookie(\"password\", password, 365 * 10);\r\n\t\t\t\t\thistory.push(\"/usr/contacts\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(\"error\", error));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className=\"mycard\">\r\n\t\t\t<div classsname=\"card auth-card\">\r\n\t\t\t\t<Row className=\"justify-content-center\">\r\n\t\t\t\t\t<h2 className=\"brand-logo\">Login</h2>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"justify-content-center\">\r\n\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t<Col xs={12}>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\tstyle={{ margin: \"5px 5px 5px 5px\" }}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={12}>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\tstyle={{ margin: \"5px 5px 5px 5px\" }}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={() => postInfo()}\r\n\t\t\t\t\t\t\tclassName=\"btn-s waves-effect waves-light\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSignin{\" \"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Link to=\"/signup\">Dont have an account?</Link>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{ display: \"flex\", justifyContent: \"space-around\" }}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport { Card, Row, InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport { Person } from \"@material-ui/icons\";\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\n\r\nconst Signup = () => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [phone, setPhone] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst history = useHistory();\r\n\tconst { speak, voices } = useSpeechSynthesis();\r\n\r\n\tlet voice = null;\r\n\tvoices.forEach((v) => {\r\n\t\tif (v.lang === \"hi-IN\") {\r\n\t\t\tvoice = v;\r\n\t\t}\r\n\t});\r\n\r\n\tconst postInfo = () => {\r\n\t\tfetch(\"http://stormy-tundra-81519.herokuapp.com/register\", {\r\n\t\t\tmethod: \"post\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tusername,\r\n\t\t\t\tpassword,\r\n\t\t\t\tname,\r\n\t\t\t\tphone,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tif (data.error) {\r\n\t\t\t\t\tspeak({\r\n\t\t\t\t\t\ttext: `Unable to register. ${data.error}`,\r\n\t\t\t\t\t\tvoice,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tM.toast({ html: data.error });\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tspeak({\r\n\t\t\t\t\t\ttext: `Successfully registered with username ${username}`,\r\n\t\t\t\t\t\tvoice,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tM.toast({ html: data.message });\r\n\t\t\t\t\thistory.push(\"/signin\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className=\"mycard\">\r\n\t\t\t<div classsname=\"card auth-card\">\r\n\t\t\t\t<Row className=\"justify-content-center\">\r\n\t\t\t\t\t<h2 className=\"brand-logo\">Signup</h2>\r\n\t\t\t\t</Row>\r\n\t\t\t\t{/* <Row className=\"justify-content-center\">\r\n                    <Person className=\"icon-person\" style={{ fontSize: 120 }} />\r\n                </Row> */}\r\n\t\t\t\t<InputGroup>\r\n\t\t\t\t\t<Row classname=\"justify-content-center\">\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tstyle={{ margin: \"5px 20px 5px 20px\" }}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tstyle={{ margin: \"5px 20px 5px 20px\" }}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tstyle={{ margin: \"5px 20px 5px 20px\" }}\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tstyle={{ margin: \"5px 20px 5px 20px\" }}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Phone\"\r\n\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\tonChange={(e) => setPhone(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"btn-s waves-effect waves-light\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={() => postInfo()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSignup\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Link to=\"/signin\">Already have an account?</Link>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t\t<div style={{ display: \"flex\", justifyContent: \"space-around\" }}></div>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default Signup;\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const updateReciepient = (reciepientName) => ({\r\n    type: actionTypes.UPDATE_RECPNT,\r\n    payload: {\r\n        reciepientName:reciepientName,\r\n    }\r\n})\r\n\r\nexport const updateHistory = (new_history) => ({\r\n    type:actionTypes.UPDATE_HSTR,\r\n    payload: {\r\n        history:new_history,\r\n    }\r\n})\r\nexport const updateLoggedInUser = (new_user) => ({\r\n    type:actionTypes.UPDATE_LGINUSR,\r\n    payload: {\r\n        loggedinUser:new_user,\r\n    }\r\n})\r\nexport const updateMessage = (new_message) => ({\r\n    type:actionTypes.UPDATE_MSG,\r\n    payload: {\r\n        from:new_message.from,\r\n        to:new_message.to,\r\n        text:new_message.text,\r\n        type:new_message.type,\r\n        enc:new_message.enc\r\n    }\r\n})","export const UPDATE_RECPNT = \"Update_reciepient\";\r\nexport const UPDATE_HSTR = \"Update_history\";\r\nexport const UPDATE_LGINUSR = \"Update_loggedInUser\";\r\nexport const UPDATE_MSG = \"Update_message\";","import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (\r\n    onLongPress,\r\n    onClick,\r\n    { shouldPreventDefault = true, delay = 300 } = {}\r\n) => {\r\n    const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n    const timeout = useRef();\r\n    const target = useRef();\r\n\r\n    const start = useCallback(\r\n        (event) => {\r\n            if (shouldPreventDefault && event.target) {\r\n                event.target.addEventListener(\"touchend\", preventDefault, {\r\n                    passive: false,\r\n                });\r\n                target.current = event.target;\r\n            }\r\n            timeout.current = setTimeout(() => {\r\n                onLongPress(event);\r\n                setLongPressTriggered(true);\r\n            }, delay);\r\n        },\r\n        [onLongPress, delay, shouldPreventDefault]\r\n    );\r\n\r\n    const clear = useCallback(\r\n        (event, shouldTriggerClick = true) => {\r\n            timeout.current && clearTimeout(timeout.current);\r\n            shouldTriggerClick && !longPressTriggered && onClick();\r\n            setLongPressTriggered(false);\r\n            if (shouldPreventDefault && target.current) {\r\n                target.current.removeEventListener(\"touchend\", preventDefault);\r\n            }\r\n        },\r\n        [shouldPreventDefault, onClick, longPressTriggered]\r\n    );\r\n\r\n    return {\r\n        onMouseDown: (e) => start(e),\r\n        onTouchStart: (e) => start(e),\r\n        onMouseUp: (e) => clear(e),\r\n        onMouseLeave: (e) => clear(e, false),\r\n        onTouchEnd: (e) => clear(e),\r\n    };\r\n};\r\n\r\nconst isTouchEvent = (event) => {\r\n    return \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = (event) => {\r\n    if (!isTouchEvent(event)) return;\r\n\r\n    if (event.touches.length < 2 && event.preventDefault) {\r\n        event.preventDefault();\r\n    }\r\n};\r\n\r\nexport default useLongPress;\r\n\r\n// export default function App() {\r\n\r\n//     const onLongPress = () => {\r\n//         console.log('longpress is triggered');\r\n//     };\r\n\r\n//     const onClick = () => {\r\n//         console.log('click is triggered')\r\n//     }\r\n\r\n//     const defaultOptions = {\r\n//         shouldPreventDefault: true,\r\n//         delay: 500,\r\n//     };\r\n//     const longPressEvent = useLongPress(onLongPress, onClick, defaultOptions);\r\n\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <button {...longPressEvent}>use  Loooong  Press</button>\r\n//         </div>\r\n//     );\r\n// }\r\n","import React, { useState, useEffect } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport \"./contacts.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateReciepient } from \"../../../redux/actionCreator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSpeechSynthesis, useSpeechRecognition } from \"react-speech-kit\";\r\nimport usePersistedState from \"../../../hooks/usePersistedState\";\r\nimport { delete_cookie } from \"../../../hooks/useCookie\";\r\nimport useLongPress from \"../../../hooks/useLongPress\";\r\n\r\nconst Contacts = (props) => {\r\n    const historys = useHistory();\r\n    const dispatch = useDispatch();\r\n    const reciepient = useSelector((state) => state.reciepient);\r\n    const history = useSelector((state) => state.history);\r\n    const userLoggedIn = useSelector((state) => state.loggedInUser);\r\n    const [list, setList] = useState([]);\r\n    const [frndlist, setFrndList] = useState([]);\r\n    const [online, setOnline] = useState([userLoggedIn]);\r\n    const [ptr, setPtr] = usePersistedState(\"ptr\", 0);\r\n    const { speak, voices } = useSpeechSynthesis();\r\n    const [newContact, setNewContact] = useState(\"\");\r\n    const [verifyContact, setVerifyContact] = useState(false);\r\n    const { listen, listening, stop } = useSpeechRecognition({\r\n        onResult: (result) => {\r\n            setNewContact(result.replace(/[^\\d]/g, \"\"));\r\n        },\r\n        onEnd: () => {\r\n            // call the add contact thing from here\r\n            console.log(\"Final number:\", newContact);\r\n            if (newContact.length === 10) {\r\n                sayThis(\r\n                    `The number recorded is ${newContact\r\n                        .split(\"\")\r\n                        .join(\r\n                            \" \"\r\n                        )}. Click to accept and long press to reject it.`\r\n                );\r\n                // Confirm if the number is correct\r\n\r\n                // if yes\r\n                setVerifyContact(true);\r\n                // addContact();\r\n            } else {\r\n                sayThis(\"Invalid entry. Please record the number again.\");\r\n            }\r\n        },\r\n    });\r\n\r\n\tconst onLongPressAddContact = () => {\r\n\t\tsayThis(\"Discarding number.\");\r\n\t\tsetVerifyContact(false);\r\n\t\tsetNewContact('');\r\n\t}\r\n\r\n\tconst onClickAddContact = () => {\r\n\t\tsayThis(\"Adding contact...\");\r\n\t\taddContact().then(() => {\r\n\t\t\tsayThis(\"Number added to friend list.\");\r\n\t\t\tsetVerifyContact(false);\r\n\t\t\tsetNewContact('');\r\n\t\t})\r\n\t}\r\n\r\n\tconst defaultOptions = {\r\n        shouldPreventDefault: true,\r\n        delay: 300,\r\n    };\r\n\r\n\tconst longPressEvent = useLongPress(onLongPressAddContact, onClickAddContact, defaultOptions);\r\n\r\n    const startListening = () => {\r\n        if (!listening) listen();\r\n    };\r\n\r\n    const stopListening = () => {\r\n        if (listening) stop();\r\n    };\r\n\r\n    let voice = null;\r\n    voices.forEach((v) => {\r\n        if (v.lang === \"hi-EN\") {\r\n            voice = v;\r\n        }\r\n    });\r\n\r\n    var status = \"\";\r\n\r\n    useEffect(() => {\r\n        async function anyFunction() {\r\n            await fetch(\"http://stormy-tundra-81519.herokuapp.com/contacts\", {\r\n                method: \"get\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    setList(data);\r\n                });\r\n\r\n            setTimeout(async () => {\r\n                await fetch(\r\n                    \"http://stormy-tundra-81519.herokuapp.com/contacts/friends\",\r\n                    {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify({\r\n                            username: props.loggedinUser,\r\n                        }),\r\n                    }\r\n                )\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        setFrndList(data);\r\n                    })\r\n                    .catch((err) => console.log(err));\r\n            }, 50);\r\n\r\n            setInterval(async () => {\r\n                await fetch(\r\n                    \"http://stormy-tundra-81519.herokuapp.com/message/clients\",\r\n                    {\r\n                        method: \"GET\",\r\n                    }\r\n                )\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        setOnline(data);\r\n                    });\r\n            }, 500);\r\n        }\r\n        anyFunction();\r\n    }, [props.loggedinUser, frndlist]);\r\n\r\n    // const getHistory = async () => {\r\n    // \tvar myHeaders = new Headers();\r\n    // \tmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    // \tvar raw = JSON.stringify({\r\n    // \t\tto: reciepient,\r\n    // \t\tfrom: props.loggedinUser,\r\n    // \t});\r\n\r\n    // \tvar requestOptions = {\r\n    // \t\tmethod: \"POST\",\r\n    // \t\theaders: myHeaders,\r\n    // \t\tbody: raw,\r\n    // \t\tredirect: \"follow\",\r\n    // \t\tcredentials: \"include\",\r\n    // \t};\r\n\r\n    // \tawait fetch(\"http://stormy-tundra-81519.herokuapp.com/message/history\", requestOptions)\r\n    // \t\t.then((response) => response.json())\r\n    // \t\t.then(async (result) => {\r\n    // \t\t\tdispatch(updateHistory(result));\r\n    // \t\t\tconsole.log(\"history from contact: \", history);\r\n    // \t\t})\r\n    // \t\t.catch((error) => console.log(\"error\", error));\r\n    // };\r\n\r\n    const addContact = async () => {\r\n        await fetch(\"http://stormy-tundra-81519.herokuapp.com/contacts\", {\r\n            method: \"get\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setList(data);\r\n                console.log(data);\r\n            });\r\n        var flag = false;\r\n        list.forEach(async (user) => {\r\n            if (\r\n                user.username !== props.loggedinUser &&\r\n                user.phone === newContact\r\n            ) {\r\n                flag = true;\r\n                await fetch(\r\n                    \"http://stormy-tundra-81519.herokuapp.com/contacts/addcontact\",\r\n                    {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify({\r\n                            username: props.loggedinUser,\r\n                            friend: user.username,\r\n                        }),\r\n                    }\r\n                )\r\n                    .then((response) => response.json())\r\n                    .then((data) => console.log(data))\r\n                    .catch((err) => console.log(err));\r\n\r\n                await fetch(\r\n                    \"http://stormy-tundra-81519.herokuapp.com/contacts/friends\",\r\n                    {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify({\r\n                            username: props.loggedinUser,\r\n                        }),\r\n                    }\r\n                )\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        setFrndList(data);\r\n                        console.log(\"friendlist\", data);\r\n                    })\r\n                    .catch((err) => console.log(err));\r\n            }\r\n            return;\r\n        });\r\n        if (flag === false) {\r\n            sayThis(\"User doesnt exist\");\r\n            M.toast({ html: \"User doesnt exist!!\" });\r\n        }\r\n        return;\r\n    };\r\n\r\n    const sayThis = (data) => {\r\n        speak({\r\n            text: data,\r\n            voice,\r\n        });\r\n        M.toast({ html: data });\r\n    };\r\n\r\n    return (\r\n        <div className=\"maindiv\">\r\n            <div className=\"buttons\">\r\n                <div\r\n                    className=\"top-left button\"\r\n                    onClick={() => {\r\n                        if (frndlist.length !== 0) {\r\n                            if (ptr == 0) {\r\n                                setPtr(frndlist.length - 1);\r\n                                console.log(frndlist[frndlist.length - 1]);\r\n                                if (\r\n                                    online.indexOf(\r\n                                        frndlist[frndlist.length - 1].username\r\n                                    ) > -1\r\n                                ) {\r\n                                    status = \" online\";\r\n                                } else {\r\n                                    status = \" not online\";\r\n                                }\r\n                                sayThis(\r\n                                    frndlist[frndlist.length - 1].username +\r\n                                        status\r\n                                );\r\n                            } else {\r\n                                setPtr(ptr - 1);\r\n                                console.log(frndlist[ptr - 1]);\r\n\r\n                                if (\r\n                                    online.indexOf(frndlist[ptr - 1].username) >\r\n                                    -1\r\n                                ) {\r\n                                    status = \" online\";\r\n                                } else {\r\n                                    status = \" not online\";\r\n                                }\r\n                                sayThis(frndlist[ptr - 1].username + status);\r\n                            }\r\n                        } else {\r\n                            sayThis(\r\n                                \"You have no friends, Add new friends using the center button!\"\r\n                            );\r\n                        }\r\n                    }}\r\n                >\r\n                    Left\r\n                </div>\r\n                <div\r\n                    className=\"top-right button\"\r\n                    onClick={() => {\r\n                        if (frndlist.length !== 0) {\r\n                            if (ptr == frndlist.length - 1) {\r\n                                setPtr(0);\r\n                                console.log(frndlist[0]);\r\n\r\n                                if (online.indexOf(frndlist[0].username) > -1) {\r\n                                    status = \" online\";\r\n                                } else {\r\n                                    status = \" not online\";\r\n                                }\r\n                                sayThis(frndlist[0].username + status);\r\n                            } else {\r\n                                setPtr(ptr + 1);\r\n                                console.log(frndlist[ptr + 1]);\r\n                                if (\r\n                                    online.indexOf(frndlist[ptr + 1].username) >\r\n                                    -1\r\n                                ) {\r\n                                    status = \" online\";\r\n                                } else {\r\n                                    status = \" not online\";\r\n                                }\r\n                                sayThis(frndlist[ptr + 1].username + status);\r\n                            }\r\n                        } else {\r\n                            sayThis(\r\n                                \"You have no friends, Add new friends using the center button\"\r\n                            );\r\n                        }\r\n                    }}\r\n                >\r\n                    Right\r\n                </div>\r\n                <div\r\n                    className=\"bottom-left button\"\r\n                    onClick={() => {\r\n                        localStorage.setItem(\"ptr\", 0);\r\n                        delete_cookie(\"username\");\r\n                        delete_cookie(\"password\");\r\n                        props.logout();\r\n                    }}\r\n                >\r\n                    Logout\r\n                </div>\r\n                <div\r\n                    className=\"bottom-right button\"\r\n                    onClick={() => {\r\n                        if (frndlist !== []) {\r\n                            if (frndlist[ptr].username === props.loggedinUser) {\r\n                                sayThis(\"You cant chat with yourself. LONER!\");\r\n                            } else {\r\n                                dispatch(\r\n                                    updateReciepient(frndlist[ptr].username)\r\n                                );\r\n                                sayThis(\r\n                                    `Entering chat with ${frndlist[ptr].username}`\r\n                                );\r\n                                historys.push(\"/usr/chat\");\r\n                            }\r\n                        } else {\r\n                            sayThis(\r\n                                \"You have no friends. Add new friends using the center button!\"\r\n                            );\r\n                        }\r\n                    }}\r\n                >\r\n                    Chat\r\n                </div>\r\n                {verifyContact ? (\r\n                    <div className=\"center\" {...longPressEvent}>\r\n\t\t\t\t\t\tVerify contact..\r\n\t\t\t\t\t</div>\r\n                ) : (\r\n                    <div\r\n                        className=\"center\"\r\n                        onTouchStart={startListening}\r\n                        onTouchEnd={stopListening}\r\n                        onMouseDown={startListening}\r\n                        onMouseUp={stopListening}\r\n                        onMouseLeave={stopListening}\r\n                    >\r\n                        {listening ? \"Listening...\" : \"Add\"}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div\r\n                className=\"current\"\r\n                onClick={() => {\r\n                    sayThis(\r\n                        `You are on Contacts page. ${\r\n                            frndlist !== []\r\n                                ? `The contacts pointer is on ${frndlist[ptr].username}`\r\n                                : `You have no friends, add new friends using the center button.`\r\n                        }`\r\n                    );\r\n                }}\r\n            >\r\n                Current\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\n\r\nexport default function usePersistedState(key, defaultValue) {\r\n\tconst [state, setState] = React.useState(() => {\r\n\t\tconst persistedState = localStorage.getItem(key);\r\n\t\treturn persistedState ? JSON.parse(persistedState) : defaultValue;\r\n\t});\r\n\tReact.useEffect(() => {\r\n\t\twindow.localStorage.setItem(key, JSON.stringify(state));\r\n\t}, [state, key]);\r\n\treturn [state, setState];\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport { updateHistory, updateMessage } from \"../../../redux/actionCreator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\nimport { ReactMediaRecorder } from \"react-media-recorder\";\r\nimport \"./chat.css\";\r\n\r\nconst Chat = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst historys = useHistory();\r\n\tconst history = useSelector((state) => state.history);\r\n\tconst [ptr, setPtr] = useState(0);\r\n\r\n\tconst { speak, voices } = useSpeechSynthesis();\r\n\r\n\tlet voice = null;\r\n\tvoices.forEach((v) => {\r\n\t\tif (v.lang === \"hi-EN\") {\r\n\t\t\tvoice = v;\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function anyFunction() {\r\n\t\t\tvar myHeaders = new Headers();\r\n\t\t\tmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\t\t\tvar raw = JSON.stringify({\r\n\t\t\t\tto: props.recipient,\r\n\t\t\t\tfrom: props.loggedinUser,\r\n\t\t\t});\r\n\r\n\t\t\tvar requestOptions = {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: myHeaders,\r\n\t\t\t\tbody: raw,\r\n\t\t\t\tredirect: \"follow\",\r\n\t\t\t\tcredentials: \"include\",\r\n\t\t\t};\r\n\r\n\t\t\tawait fetch(\"http://stormy-tundra-81519.herokuapp.com/message/history\", requestOptions)\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then(async (result) => {\r\n\t\t\t\t\tconsole.log(\"data from server:\", result);\r\n\t\t\t\t\tdispatch(updateHistory(result));\r\n\t\t\t\t\tconsole.log(\"history from contact: \", result);\r\n\t\t\t\t\tsetPtr(result.length - 1);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => console.log(\"error\", error));\r\n\t\t}\r\n\t\tanyFunction();\r\n\t}, [props.loggedinUser]);\r\n\r\n\tconst sayThis = (data) => {\r\n\t\tspeak({\r\n\t\t\ttext: data,\r\n\t\t\tvoice,\r\n\t\t});\r\n\t\tM.toast({ html: data });\r\n\t};\r\n\r\n\tconst readMessage = async (msg) => {\r\n\t\tif (msg === undefined) return;\r\n\t\tsayThis(`From ${msg.from} To ${msg.to} `);\r\n\t\tif (msg.type === \"text\") {\r\n\t\t\tsayThis(\r\n\t\t\t\t`The text message was ${\r\n\t\t\t\t\tmsg.text.charAt(0).toUpperCase() + msg.text.slice(1)\r\n\t\t\t\t}`\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tsayThis(`The audio message was `);\r\n\t\t\tawait new Promise((resolve) => setTimeout(resolve, 6000));\r\n\t\t\tconst audio = new Audio(msg.enc);\r\n\t\t\taudio.play();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"maindiv\">\r\n\t\t\t<div className=\"buttons\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"top-left button\"\r\n\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\tif (history.length !== 0) {\r\n\t\t\t\t\t\t\tif (ptr == 0) {\r\n\t\t\t\t\t\t\t\tsayThis(\"No more previous messages\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsetPtr(ptr - 1);\r\n\t\t\t\t\t\t\t\tvar msg = history[ptr - 1];\r\n\t\t\t\t\t\t\t\tconsole.log(msg);\r\n\t\t\t\t\t\t\t\treadMessage(msg);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsayThis(`There has been no conversation with ${props.recipient}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tLeft\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"top-right button\"\r\n\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\tif (history.length !== 0) {\r\n\t\t\t\t\t\t\tif (ptr == history.length - 1) {\r\n\t\t\t\t\t\t\t\tsayThis(\"No more new messages\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsetPtr(ptr + 1);\r\n\t\t\t\t\t\t\t\tvar msg = history[ptr + 1];\r\n\t\t\t\t\t\t\t\tconsole.log(msg);\r\n\t\t\t\t\t\t\t\treadMessage(msg);\r\n\t\t\t\t\t\t\t\t// sayThis(`From ${msg.from} To ${msg.to} `);\r\n\t\t\t\t\t\t\t\t// if (msg.type === \"text\") {\r\n\t\t\t\t\t\t\t\t// \tsayThis(\r\n\t\t\t\t\t\t\t\t// \t\t`The text message was ${\r\n\t\t\t\t\t\t\t\t// \t\t\tmsg.text.charAt(0).toUpperCase() + msg.text.slice(1)\r\n\t\t\t\t\t\t\t\t// \t\t}`\r\n\t\t\t\t\t\t\t\t// \t);\r\n\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t// \tsayThis(`The audio message was `);\r\n\t\t\t\t\t\t\t\t// \tawait new Promise((resolve) => setTimeout(resolve, 6200));\r\n\t\t\t\t\t\t\t\t// \tconst audio = new Audio(msg.enc);\r\n\t\t\t\t\t\t\t\t// \taudio.play();\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// sayThis(frndlist[ptr]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsayThis(`There has been no conversation with ${props.recipient}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tRight\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"bottom-left button\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\thistorys.push(\"/usr/contacts\");\r\n\t\t\t\t\t\tsayThis(\"Going back to contacts page\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tBack\r\n\t\t\t\t</div>\r\n\t\t\t\t<ReactMediaRecorder\r\n\t\t\t\t\trender={({ status, startRecording, stopRecording, mediaBlobUrl }) => {\r\n\t\t\t\t\t\tconst start = () => {\r\n\t\t\t\t\t\t\tstartRecording();\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tconst end = async () => {\r\n\t\t\t\t\t\t\tstopRecording();\r\n\t\t\t\t\t\t\tif (!mediaBlobUrl) return;\r\n\t\t\t\t\t\t\tconst blob = await fetch(mediaBlobUrl).then((r) => r.blob());\r\n\t\t\t\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\t\t\t\treader.readAsDataURL(blob);\r\n\t\t\t\t\t\t\treader.onloadend = () => {\r\n\t\t\t\t\t\t\t\tconst base64data = reader.result;\r\n\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\tupdateMessage({\r\n\t\t\t\t\t\t\t\t\t\ttype: \"audio\",\r\n\t\t\t\t\t\t\t\t\t\tenc: base64data,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\thistorys.push(\"/usr/recorder\");\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"bottom-right button\"\r\n\t\t\t\t\t\t\t\tonTouchStart={start}\r\n\t\t\t\t\t\t\t\tonTouchEnd={end}\r\n\t\t\t\t\t\t\t\tonMouseDown={start}\r\n\t\t\t\t\t\t\t\tonMouseUp={end}\r\n\t\t\t\t\t\t\t\tonMouseLeave={end}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{status === \"recording\" ? \"Recording...\" : \"Record\"}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t// <Col xs={1} md={0.5}\r\n\t\t\t\t\t\t\t//     style={{\r\n\t\t\t\t\t\t\t//         // padding: \"5px 0px 0px 0px\",\r\n\t\t\t\t\t\t\t//         color: `${status === 'recording' ? 'limegreen' : 'black'}`\r\n\t\t\t\t\t\t\t//     }}>\r\n\t\t\t\t\t\t\t//     <Mic style={{ margin: \"10px 0px 0px 0px \" }}\r\n\t\t\t\t\t\t\t// onTouchStart={start}\r\n\t\t\t\t\t\t\t// onTouchEnd={end}\r\n\t\t\t\t\t\t\t// onMouseDown={start}\r\n\t\t\t\t\t\t\t// onMouseUp={end}\r\n\t\t\t\t\t\t\t// onMouseLeave={end} />\r\n\t\t\t\t\t\t\t// </Col>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"center\"\r\n\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\tif (history !== []) {\r\n\t\t\t\t\t\t\tsetPtr(history.length - 1);\r\n\t\t\t\t\t\t\tsayThis(\"Jumping back to latest message\");\r\n\t\t\t\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, 3000));\r\n\t\t\t\t\t\t\treadMessage(history[history.length - 1]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsayThis(`There has been no conversation with ${props.recipient}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tLatest\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"current\"\r\n\t\t\t\tonClick={async () => {\r\n\t\t\t\t\tconsole.log(history);\r\n\t\t\t\t\tsayThis(\r\n\t\t\t\t\t\t`You are on Chat page with ${props.recipient}. ${\r\n\t\t\t\t\t\t\thistory.length !== 0\r\n\t\t\t\t\t\t\t\t? \"Current message is \"\r\n\t\t\t\t\t\t\t\t: \"There are no messages here.\"\r\n\t\t\t\t\t\t}`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, 4000));\r\n\t\t\t\t\treadMessage(history[ptr]);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tCurrent\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport M from \"materialize-css\";\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ReactMediaRecorder } from \"react-media-recorder\";\r\nimport { updateMessage } from \"../../../redux/actionCreator\";\r\n\r\nexport default function Recorder(props) {\r\n\tconst { speak, voices } = useSpeechSynthesis();\r\n\tconst dispatch = useDispatch();\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst reciepient = useSelector((state) => state.reciepient);\r\n\tconst historys = useHistory();\r\n\r\n\tlet voice = null;\r\n\tvoices.forEach((v) => {\r\n\t\tif (v.lang === \"hi-IN\") {\r\n\t\t\tvoice = v;\r\n\t\t}\r\n\t});\r\n\r\n\tconst sayThis = (data) => {\r\n\t\tspeak({\r\n\t\t\ttext: data,\r\n\t\t\tvoice,\r\n\t\t});\r\n\t\tM.toast({ html: data });\r\n\t};\r\n\r\n\tconst sendMessage = async () => {\r\n\t\tsayThis(`Sending message to ${reciepient}.`);\r\n\t\tawait props.sendMessage();\r\n\t\tawait new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n\t\thistorys.push(\"/usr/chat\");\r\n\t};\r\n\r\n\tconst playMessage = () => {\r\n\t\tconst audio = new Audio(message.enc);\r\n\t\taudio.play();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"maindiv\">\r\n\t\t\t<div className=\"buttons\">\r\n\t\t\t\t<ReactMediaRecorder\r\n\t\t\t\t\trender={({ status, startRecording, stopRecording, mediaBlobUrl }) => {\r\n\t\t\t\t\t\tconst start = () => {\r\n\t\t\t\t\t\t\tstartRecording();\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tconst end = async () => {\r\n\t\t\t\t\t\t\tstopRecording();\r\n\t\t\t\t\t\t\tif (!mediaBlobUrl) return;\r\n\t\t\t\t\t\t\tconst blob = await fetch(mediaBlobUrl).then((r) => r.blob());\r\n\t\t\t\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\t\t\t\treader.readAsDataURL(blob);\r\n\t\t\t\t\t\t\treader.onloadend = () => {\r\n\t\t\t\t\t\t\t\tconst base64data = reader.result;\r\n\t\t\t\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\t\t\t\tupdateMessage({\r\n\t\t\t\t\t\t\t\t\t\ttype: \"audio\",\r\n\t\t\t\t\t\t\t\t\t\tenc: base64data,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"top-left button\"\r\n\t\t\t\t\t\t\t\tonTouchStart={start}\r\n\t\t\t\t\t\t\t\tonTouchEnd={end}\r\n\t\t\t\t\t\t\t\tonMouseDown={start}\r\n\t\t\t\t\t\t\t\tonMouseUp={end}\r\n\t\t\t\t\t\t\t\tonMouseLeave={end}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{status === \"recording\" ? \"Recording...\" : \"Re-Record\"}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"top-right button\" onClick={playMessage}>\r\n\t\t\t\t\tReplay\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"bottom-left button\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\thistorys.push(\"/usr/chat\");\r\n\t\t\t\t\t\tsayThis(\"Discarding the audio and going back to chat page\");\r\n\t\t\t\t\t\tdispatch(updateMessage({}));\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tBack\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"bottom-right button\" onClick={sendMessage}>\r\n\t\t\t\t\tSend\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"current\"\r\n\t\t\t\tonClick={() => sayThis(\"You are on the recordings page\")}\r\n\t\t\t>\r\n\t\t\t\tCurrent\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Contacts from \"../contacts/Contacts\";\r\nimport Chat from \"../chat/Chat\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n\tupdateHistory,\r\n\tupdateLoggedInUser,\r\n} from \"../../../redux/actionCreator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./user.css\";\r\nimport Recorder from \"../recorder/Recorder\";\r\nimport { getCookie } from \"../../../hooks/useCookie\";\r\n\r\nconst User = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst historys = useHistory();\r\n\tconst { type } = useParams();\r\n\tconst reciepient = useSelector((state) => state.reciepient);\r\n\tconst message = useSelector((state) => state.message);\r\n\tconst history = useSelector((state) => state.history);\r\n\tconst loggedInUser = useSelector((state) => state.loggedInUser);\r\n\tvar server = \"http://stormy-tundra-81519.herokuapp.com/\";\r\n\tvar ws_server = \"ws://stormy-tundra-81519.herokuapp.com/\";\r\n\tvar ws = new WebSocket(ws_server + \"message\");\r\n\tvar buffer = [];\r\n\r\n\tconst getHistory = async () => {\r\n\t\tvar myHeaders = new Headers();\r\n\t\tmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\t\tvar raw = JSON.stringify({\r\n\t\t\tto: reciepient,\r\n\t\t\tfrom: loggedInUser,\r\n\t\t});\r\n\r\n\t\tvar requestOptions = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: myHeaders,\r\n\t\t\tbody: raw,\r\n\t\t\tredirect: \"follow\",\r\n\t\t\tcredentials: \"include\",\r\n\t\t};\r\n\r\n\t\tawait fetch(\"http://stormy-tundra-81519.herokuapp.com/message/history\", requestOptions)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then(async (result) => {\r\n\t\t\t\tconsole.log(\"data from server:\", result);\r\n\t\t\t\tdispatch(updateHistory(result));\r\n\t\t\t\tconsole.log(\"history from contact: \", history);\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.log(\"error\", error));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function anyFunction() {\r\n\t\t\tws.onerror = (err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t};\r\n\t\t\tws.onmessage = (message) => {\r\n\t\t\t\tconsole.log(message.data);\r\n\t\t\t\tgetHistory();\r\n\t\t\t};\r\n\t\t\tconst username = getCookie('username');\r\n\t\t\tawait fetch(server + `self/${username}`, {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t\tcredentials: \"include\",\r\n\t\t\t})\r\n\t\t\t\t.then((resp) => resp.json())\r\n\t\t\t\t.then(async (data) => {\r\n\t\t\t\t\tconsole.log(\"data from fetch(/self): \", data);\r\n\t\t\t\t\tdispatch(updateLoggedInUser(data.username));\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tanyFunction();\r\n\t}, [loggedInUser]);\r\n\r\n\tconst Sendmessage = () => {\r\n\t\tconsole.log(\"Message body in websocket function:\", message);\r\n\t\tlet resp = JSON.stringify({\r\n\t\t\tfrom: loggedInUser,\r\n\t\t\tto: reciepient,\r\n\t\t\ttype: message.type,\r\n\t\t\tenc: message.enc,\r\n\t\t\ttext: message.text,\r\n\t\t\ttimestamp: Date.now(),\r\n\t\t});\r\n\t\tif (ws) {\r\n\t\t\tbuffer.forEach((message) => {\r\n\t\t\t\tws.send(message);\r\n\t\t\t});\r\n\t\t\tbuffer.length = 0;\r\n\t\t\tws.send(resp);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ws not available\");\r\n\t\t\tif (!buffer.includes(resp)) {\r\n\t\t\t\tbuffer.push(resp);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst logout = () => {\r\n\t\tws.close();\r\n\t\tfetch(\"http://stormy-tundra-81519.herokuapp.com/auth/logout\", { method: \"GET\" })\r\n\t\t\t.then((data) => {\r\n\t\t\t\thistorys.push(\"/signin\");\r\n\t\t\t\t// this.props.history.push(\"/signin\");\r\n\t\t\t\t// console.log(this.props.history);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\r\n\tif (loggedInUser !== \"\") {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"contacts\": {\r\n\t\t\t\treturn <Contacts loggedinUser={loggedInUser} logout={logout} />;\r\n\t\t\t}\r\n\t\t\tcase \"chat\": {\r\n\t\t\t\tif (reciepient !== undefined) {\r\n\t\t\t\t\treturn <Chat loggedinUser={loggedInUser} recipient={reciepient} />;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcase \"recorder\": {\r\n\t\t\t\tif (reciepient !== undefined) {\r\n\t\t\t\t\treturn <Recorder sendMessage={Sendmessage} />;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport default User;\r\n","import * as actionTypes from '../actionTypes'\r\n\r\nexport const Reciepient = (state = \"\", action) => {\r\n    switch(action.type) {\r\n        case actionTypes.UPDATE_RECPNT:\r\n            var n_reciepient = action.payload.reciepientName;\r\n            return n_reciepient;\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from \"../actionTypes\";\r\nexport const Message = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.UPDATE_MSG:\r\n            var new_message = action.payload;\r\n            return new_message;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as actionTypes from '../actionTypes'\r\n\r\nexport const History = (state = \"\", action) => {\r\n    switch (action.type) {\r\n        case actionTypes.UPDATE_HSTR:\r\n            var new_history = action.payload.history;\r\n            return new_history;\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from '../actionTypes'\r\n\r\nexport const LoggedinUser = (state = \"\", action) => {\r\n    switch (action.type) {\r\n        case actionTypes.UPDATE_LGINUSR:\r\n            var new_logggedInUser = action.payload.loggedinUser;\r\n            return new_logggedInUser;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { Route, BrowserRouter, Switch, Redirect } from \"react-router-dom\";\r\nimport Signin from \"./components/Views/Signin\";\r\nimport Signup from \"./components/Views/Signup\";\r\nimport User from \"./components/Views/user/User\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ConfigureStore } from \"./redux/configureStore\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst appHistory = createBrowserHistory();\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter history={appHistory}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Signin />\r\n                        </Route>\r\n\r\n                        <Route path=\"/signup\">\r\n                            <Signup />\r\n                        </Route>\r\n\r\n                        <Route path=\"/usr/:type\">\r\n                            <User />\r\n                        </Route>\r\n\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { Reciepient } from \"./reducers/reciepient\";\r\nimport { Message } from \"./reducers/message\";\r\nimport { History } from \"./reducers/history\";\r\nimport { LoggedinUser } from \"./reducers/loggedInUser\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            reciepient: Reciepient,\r\n            message: Message,\r\n            history: History,\r\n            loggedInUser: LoggedinUser,\r\n        }),\r\n        composeWithDevTools()\r\n    );\r\n    return store;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}